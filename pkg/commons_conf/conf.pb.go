// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: commons_conf/conf.proto

package commons_conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamoDb *Data_DynamoDb `protobuf:"bytes,1,opt,name=dynamo_db,json=dynamoDb,proto3" json:"dynamo_db,omitempty"`
	Redis    *Data_Redis    `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	S3       *Data_S3       `protobuf:"bytes,3,opt,name=s3,proto3" json:"s3,omitempty"`
	MongoDb  *Data_MongoDb  `protobuf:"bytes,4,opt,name=mongoDb,proto3" json:"mongoDb,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_conf_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_commons_conf_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_commons_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Data) GetDynamoDb() *Data_DynamoDb {
	if x != nil {
		return x.DynamoDb
	}
	return nil
}

func (x *Data) GetRedis() *Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Data) GetS3() *Data_S3 {
	if x != nil {
		return x.S3
	}
	return nil
}

func (x *Data) GetMongoDb() *Data_MongoDb {
	if x != nil {
		return x.MongoDb
	}
	return nil
}

type Publisher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestAndAssessment *Publisher_Topic `protobuf:"bytes,1,opt,name=test_and_assessment,json=testAndAssessment,proto3" json:"test_and_assessment,omitempty"`
}

func (x *Publisher) Reset() {
	*x = Publisher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_conf_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Publisher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publisher) ProtoMessage() {}

func (x *Publisher) ProtoReflect() protoreflect.Message {
	mi := &file_commons_conf_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publisher.ProtoReflect.Descriptor instead.
func (*Publisher) Descriptor() ([]byte, []int) {
	return file_commons_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Publisher) GetTestAndAssessment() *Publisher_Topic {
	if x != nil {
		return x.TestAndAssessment
	}
	return nil
}

type Data_DynamoDb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *Data_DynamoDb) Reset() {
	*x = Data_DynamoDb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_conf_conf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_DynamoDb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_DynamoDb) ProtoMessage() {}

func (x *Data_DynamoDb) ProtoReflect() protoreflect.Message {
	mi := &file_commons_conf_conf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_DynamoDb.ProtoReflect.Descriptor instead.
func (*Data_DynamoDb) Descriptor() ([]byte, []int) {
	return file_commons_conf_conf_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Data_DynamoDb) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type Data_Redis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network          string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr             string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	ReadTimeOutInMs  int32  `protobuf:"varint,3,opt,name=read_time_out_in_ms,json=readTimeOutInMs,proto3" json:"read_time_out_in_ms,omitempty"`
	WriteTimeOutInMs int32  `protobuf:"varint,4,opt,name=write_time_out_in_ms,json=writeTimeOutInMs,proto3" json:"write_time_out_in_ms,omitempty"`
	DialTimeOutInMs  int32  `protobuf:"varint,5,opt,name=dial_time_out_in_ms,json=dialTimeOutInMs,proto3" json:"dial_time_out_in_ms,omitempty"`
	PoolSize         int32  `protobuf:"varint,6,opt,name=pool_size,json=poolSize,proto3" json:"pool_size,omitempty"`
	CredFileLocation string `protobuf:"bytes,7,opt,name=cred_file_location,json=credFileLocation,proto3" json:"cred_file_location,omitempty"`
	Tls              bool   `protobuf:"varint,8,opt,name=tls,proto3" json:"tls,omitempty"`
}

func (x *Data_Redis) Reset() {
	*x = Data_Redis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_conf_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Redis) ProtoMessage() {}

func (x *Data_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_commons_conf_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Redis.ProtoReflect.Descriptor instead.
func (*Data_Redis) Descriptor() ([]byte, []int) {
	return file_commons_conf_conf_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Data_Redis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Data_Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_Redis) GetReadTimeOutInMs() int32 {
	if x != nil {
		return x.ReadTimeOutInMs
	}
	return 0
}

func (x *Data_Redis) GetWriteTimeOutInMs() int32 {
	if x != nil {
		return x.WriteTimeOutInMs
	}
	return 0
}

func (x *Data_Redis) GetDialTimeOutInMs() int32 {
	if x != nil {
		return x.DialTimeOutInMs
	}
	return 0
}

func (x *Data_Redis) GetPoolSize() int32 {
	if x != nil {
		return x.PoolSize
	}
	return 0
}

func (x *Data_Redis) GetCredFileLocation() string {
	if x != nil {
		return x.CredFileLocation
	}
	return ""
}

func (x *Data_Redis) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

type Data_S3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *Data_S3) Reset() {
	*x = Data_S3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_conf_conf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_S3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_S3) ProtoMessage() {}

func (x *Data_S3) ProtoReflect() protoreflect.Message {
	mi := &file_commons_conf_conf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_S3.ProtoReflect.Descriptor instead.
func (*Data_S3) Descriptor() ([]byte, []int) {
	return file_commons_conf_conf_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Data_S3) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type Data_MongoDb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr             string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout          int64  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	CredFileLocation string `protobuf:"bytes,3,opt,name=cred_file_location,json=credFileLocation,proto3" json:"cred_file_location,omitempty"`
	DbName           string `protobuf:"bytes,4,opt,name=dbName,proto3" json:"dbName,omitempty"`
}

func (x *Data_MongoDb) Reset() {
	*x = Data_MongoDb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_conf_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_MongoDb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_MongoDb) ProtoMessage() {}

func (x *Data_MongoDb) ProtoReflect() protoreflect.Message {
	mi := &file_commons_conf_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_MongoDb.ProtoReflect.Descriptor instead.
func (*Data_MongoDb) Descriptor() ([]byte, []int) {
	return file_commons_conf_conf_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Data_MongoDb) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_MongoDb) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Data_MongoDb) GetCredFileLocation() string {
	if x != nil {
		return x.CredFileLocation
	}
	return ""
}

func (x *Data_MongoDb) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

type Publisher_Topic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicName    string `protobuf:"bytes,1,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	AwsRegion    string `protobuf:"bytes,2,opt,name=aws_region,json=awsRegion,proto3" json:"aws_region,omitempty"`
	MinBatchSize int32  `protobuf:"varint,3,opt,name=min_batch_size,json=minBatchSize,proto3" json:"min_batch_size,omitempty"`
	MaxBatchSize int32  `protobuf:"varint,4,opt,name=max_batch_size,json=maxBatchSize,proto3" json:"max_batch_size,omitempty"`
	MaxHandlers  int32  `protobuf:"varint,5,opt,name=max_handlers,json=maxHandlers,proto3" json:"max_handlers,omitempty"`
}

func (x *Publisher_Topic) Reset() {
	*x = Publisher_Topic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_conf_conf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Publisher_Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publisher_Topic) ProtoMessage() {}

func (x *Publisher_Topic) ProtoReflect() protoreflect.Message {
	mi := &file_commons_conf_conf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publisher_Topic.ProtoReflect.Descriptor instead.
func (*Publisher_Topic) Descriptor() ([]byte, []int) {
	return file_commons_conf_conf_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Publisher_Topic) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *Publisher_Topic) GetAwsRegion() string {
	if x != nil {
		return x.AwsRegion
	}
	return ""
}

func (x *Publisher_Topic) GetMinBatchSize() int32 {
	if x != nil {
		return x.MinBatchSize
	}
	return 0
}

func (x *Publisher_Topic) GetMaxBatchSize() int32 {
	if x != nil {
		return x.MaxBatchSize
	}
	return 0
}

func (x *Publisher_Topic) GetMaxHandlers() int32 {
	if x != nil {
		return x.MaxHandlers
	}
	return 0
}

var File_commons_conf_conf_proto protoreflect.FileDescriptor

var file_commons_conf_conf_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x61, 0x6e, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x05, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x47, 0x0a, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x5f, 0x64, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x44, 0x62, 0x52, 0x08,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x44, 0x62, 0x12, 0x3d, 0x0a, 0x05, 0x72, 0x65, 0x64, 0x69,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61,
	0x6e, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73,
	0x52, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x12, 0x34, 0x0a, 0x02, 0x73, 0x33, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x33, 0x52, 0x02, 0x73, 0x33, 0x12, 0x43, 0x0a,
	0x07, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x62, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x67, 0x6f,
	0x44, 0x62, 0x1a, 0x22, 0x0a, 0x08, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x44, 0x62, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x9e, 0x02, 0x0a, 0x05, 0x52, 0x65, 0x64, 0x69, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x2c,
	0x0a, 0x13, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f,
	0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x61,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x4d, 0x73, 0x12, 0x2e, 0x0a, 0x14,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x69,
	0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x4d, 0x73, 0x12, 0x2c, 0x0a, 0x13,
	0x64, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e,
	0x5f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x69, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x49, 0x6e, 0x4d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f,
	0x6f, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x64, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x72, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x1a, 0x1c, 0x0a, 0x02, 0x53, 0x33, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x7d, 0x0a, 0x07, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x62,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x63, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x72, 0x65, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa0, 0x02, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x12, 0x5c, 0x0a, 0x13, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x11, 0x74,
	0x65, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x1a, 0xb4, 0x01, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x77, 0x73,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x77, 0x73, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x42, 0x3b, 0x5a, 0x39, 0x74, 0x65, 0x73, 0x74, 0x2d,
	0x61, 0x6e, 0x64, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_commons_conf_conf_proto_rawDescOnce sync.Once
	file_commons_conf_conf_proto_rawDescData = file_commons_conf_conf_proto_rawDesc
)

func file_commons_conf_conf_proto_rawDescGZIP() []byte {
	file_commons_conf_conf_proto_rawDescOnce.Do(func() {
		file_commons_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_commons_conf_conf_proto_rawDescData)
	})
	return file_commons_conf_conf_proto_rawDescData
}

var file_commons_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_commons_conf_conf_proto_goTypes = []interface{}{
	(*Data)(nil),            // 0: test_and_assessment.commons.Data
	(*Publisher)(nil),       // 1: test_and_assessment.commons.Publisher
	(*Data_DynamoDb)(nil),   // 2: test_and_assessment.commons.Data.DynamoDb
	(*Data_Redis)(nil),      // 3: test_and_assessment.commons.Data.Redis
	(*Data_S3)(nil),         // 4: test_and_assessment.commons.Data.S3
	(*Data_MongoDb)(nil),    // 5: test_and_assessment.commons.Data.MongoDb
	(*Publisher_Topic)(nil), // 6: test_and_assessment.commons.Publisher.Topic
}
var file_commons_conf_conf_proto_depIdxs = []int32{
	2, // 0: test_and_assessment.commons.Data.dynamo_db:type_name -> test_and_assessment.commons.Data.DynamoDb
	3, // 1: test_and_assessment.commons.Data.redis:type_name -> test_and_assessment.commons.Data.Redis
	4, // 2: test_and_assessment.commons.Data.s3:type_name -> test_and_assessment.commons.Data.S3
	5, // 3: test_and_assessment.commons.Data.mongoDb:type_name -> test_and_assessment.commons.Data.MongoDb
	6, // 4: test_and_assessment.commons.Publisher.test_and_assessment:type_name -> test_and_assessment.commons.Publisher.Topic
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_commons_conf_conf_proto_init() }
func file_commons_conf_conf_proto_init() {
	if File_commons_conf_conf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_commons_conf_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commons_conf_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Publisher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commons_conf_conf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_DynamoDb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commons_conf_conf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_Redis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commons_conf_conf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_S3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commons_conf_conf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data_MongoDb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commons_conf_conf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Publisher_Topic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commons_conf_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_commons_conf_conf_proto_goTypes,
		DependencyIndexes: file_commons_conf_conf_proto_depIdxs,
		MessageInfos:      file_commons_conf_conf_proto_msgTypes,
	}.Build()
	File_commons_conf_conf_proto = out.File
	file_commons_conf_conf_proto_rawDesc = nil
	file_commons_conf_conf_proto_goTypes = nil
	file_commons_conf_conf_proto_depIdxs = nil
}
